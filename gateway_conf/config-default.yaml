apisix:
  # APISIX node listening address and port for the status API
  status:
    ip: 127.0.0.1
    port: 7085

  node_listen: 9080      # APISIX listening port
  enable_admin: false
  enable_dev_mode: false # Sets nginx worker_processes to 1 if set to true
  enable_reuseport: true # Enable nginx SO_REUSEPORT switch if set to true.
  show_upstream_status_in_response_header: true # when true all upstream status write to `X-APISIX-Upstream-Status` otherwise only 5xx code
  enable_ipv6: true
  enable_server_tokens: false # Whether the APISIX version number should be shown in Server header.
                              # It's enabled by default.

  # configurations to load third party code and/or override the builtin one.
  extra_lua_path: "" # extend lua_package_path to load third party code
  extra_lua_cpath: "" # extend lua_package_cpath to load third party code
  lua_module_hook: "agent.hook" # the hook module which will be used to inject third party code into APISIX

  proxy_cache: # Proxy Caching configuration
    cache_ttl: 10s # The default caching time in disk if the upstream does not specify the cache time
    zones: # The parameters of a cache
      - name: disk_cache_one  # The name of the cache, administrator can specify
                              # which cache to use by name in the admin api (disk|memory)
        memory_size: 50m      # The size of shared memory, it's used to store the cache index for
        # disk strategy, store cache content for memory strategy (disk|memory)
        disk_size: 1G # The size of disk, it's used to store the cache data (disk)
        disk_path: /tmp/disk_cache_one # The path to store the cache data (disk)
        cache_levels: "1:2" # The hierarchy levels of a cache (disk)
      - name: memory_cache
        memory_size: 100m

  delete_uri_tail_slash: false # delete the '/' at the end of the URI
  # The URI normalization in servlet is a little different from the RFC's.
  # See https://github.com/jakartaee/servlet/blob/master/spec/src/main/asciidoc/servlet-spec-body.adoc#352-uri-path-canonicalization,
  # which is used under Tomcat.
  # Turn this option on if you want to be compatible with servlet when matching URI path.
  normalize_uri_like_servlet: false
  router:
    http: radixtree_uri # radixtree_uri: match route by uri(base on radixtree)
                        # radixtree_host_uri: match route by host + uri(base on radixtree)
                        # radixtree_uri_with_parameter: like radixtree_uri but match uri with parameters,
                        #   see https://github.com/api7/lua-resty-radixtree/#parameters-in-path for
                        #   more details.
    ssl: radixtree_sni # radixtree_sni: match route by SNI(base on radixtree)
  
  resolver_timeout: 5 # resolver timeout
  enable_resolv_search_opt: true # enable search option in resolv.conf
  ssl:
    enable: true
    listen: # APISIX listening port in https.
      - port: 9443
        enable_http2: true
    ssl_trusted_certificate: system # Specifies comma separated list of trusted CA. Value can be either "system"(for using system available ca certs) or
                                    # a file path with trusted CA certificates in the PEM format
                                    # used to verify the certificate when APISIX needs to do SSL/TLS handshaking
                                    # with external services (e.g. etcd)
    ssl_protocols: TLSv1.2 TLSv1.3
    ssl_ciphers: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl_session_tickets: false  #  disable ssl_session_tickets by default for 'ssl_session_tickets' would make Perfect Forward Secrecy useless.
                                #  ref: https://github.com/mozilla/server-side-tls/issues/135

    key_encrypt_salt: #  If not set, will save origin ssl key into etcd.
      - edd1c9f0985e76a2 #  If set this, the key_encrypt_salt should be an array whose elements are string, and the size is also 16, and it will encrypt ssl key with AES-128-CBC
        #  !!! So do not change it after saving your ssl, it can't decrypt the ssl keys have be saved if you change !!
        #  Only use the first key to encrypt, and decrypt in the order of the array.

    #fallback_sni: "my.default.domain"      # If set this, when the client doesn't send SNI during handshake, the fallback SNI will be used instead
  enable_control: true
  #control:
  #  ip: 127.0.0.1
  #  port: 9090
  disable_sync_configuration_during_start: false # safe exit. Remove this once the feature is stable

  # This time will be used to distinguish whether the worker is started first time or restarted due to a crash, unit: second.
  worker_startup_time_threshold: 60

  data_encryption: # add `encrypt_fields = { $field },` in plugin schema to enable encryption
    enable: false # if not set, the default value is `false`.
    keyring:
      - qeddd145sfvddff3 # If not set, will save origin value into etcd.
        # If set this, the keyring should be an array whose elements are string, and the size is also 16, and it will encrypt fields with AES-128-CBC
        # !!! So do not change it after encryption, it can't decrypt the fields have be saved if you change !!
        # Only use the first key to encrypt, and decrypt in the order of the array.

nginx_config: # config for render the template to generate nginx.conf
  #user: root                     # specifies the execution user of the worker process.
  # the "user" directive makes sense only if the master process runs with super-user privileges.
  # if you're not root user,the default is current user.
  error_log: logs/error.log
  error_log_level: warn         # warn,error
  worker_processes: 1           # if you want use multiple cores in container, you can inject the number of cpu as environment variable "APISIX_WORKER_PROCESSES"
  enable_cpu_affinity: false    # disable CPU affinity by default, if APISIX is deployed on a physical machine, it can be enabled and work well.
  worker_rlimit_nofile: 20480   # the number of files a worker process can open, should be larger than worker_connections
  worker_shutdown_timeout: 240s # timeout for a graceful shutdown of worker processes

  max_pending_timers: 16384     # increase it if you see "too many pending timers" error
  max_running_timers: 4096      # increase it if you see "lua_max_running_timers are not enough" error

  event:
    worker_connections: 10620
  #envs:                          # allow to get a list of environment variables
  #  - TEST_ENV

  meta:
    lua_shared_dict:
      prometheus-metrics: 15m

  # As user can add arbitrary configurations in the snippet,
  # it is user's responsibility to check the configurations
  # don't conflict with APISIX.
  main_configuration_snippet: |
    # Add custom Nginx main configuration to nginx.conf.
    # The configuration should be well indented!
  http_configuration_snippet: |
    # Add custom Nginx http configuration to nginx.conf.
    # The configuration should be well indented!
  http_server_configuration_snippet: |
    # Add custom Nginx http server configuration to nginx.conf.
    # The configuration should be well indented!
  http_server_location_configuration_snippet: |
    # Add custom Nginx http server location configuration to nginx.conf.
    # The configuration should be well indented!
  http_admin_configuration_snippet: |
    # Add custom Nginx admin server configuration to nginx.conf.
    # The configuration should be well indented!
  http_end_configuration_snippet: |
    # Add custom Nginx http end configuration to nginx.conf.
    # The configuration should be well indented!
  stream_configuration_snippet: |
    # Add custom Nginx stream configuration to nginx.conf.
    # The configuration should be well indented!

  http:
    enable_access_log: off # enable access log or not, default true
    access_log: /dev/stdout # logs/access.log
    # available variables:
    # request_type: traditional_http / ai_chat / ai_stream
    # llm_time_to_first_token: duration from the start send request to ai server to the first token received
    # llm_prompt_tokens: number of tokens in the prompt
    # llm_completion_tokens: number of tokens in the chat completion
    access_log_format: '$remote_addr - $remote_user [$time_local] $http_host "$request_line" $status $body_bytes_sent $request_time "$http_referer" "$http_user_agent" $upstream_addr $upstream_status $upstream_response_time "$upstream_scheme://$upstream_host$upstream_uri" "$apisix_request_id"'
    access_log_format_escape: default # allows setting json or default characters escaping in variables
    keepalive_timeout: 60s      # timeout during which a keep-alive client connection will stay open on the server side.
    client_header_timeout: 60s  # timeout for reading client request header, then 408 (Request Time-out) error is returned to the client
    client_body_timeout: 60s    # timeout for reading client request body, then 408 (Request Time-out) error is returned to the client
    client_max_body_size: 0     # The maximum allowed size of the client request body.
                                # If exceeded, the 413 (Request Entity Too Large) error is returned to the client.
                                # Note that unlike Nginx, we don't limit the body size by default.

    send_timeout: 10s                 # timeout for transmitting a response to the client.then the connection is closed
    underscores_in_headers: "on"      # default enables the use of underscores in client request header fields
    real_ip_header: Cf-Connecting-Ip  # http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header
    real_ip_recursive: "off"          # http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_recursive
    real_ip_from:                     # http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from
      - 127.0.0.1
      - "unix:"
    custom_lua_shared_dict: # add custom shared cache to nginx.conf
      #  ipc_shared_dict: 100m       # custom shared cache, format: `cache-key: cache-size`
      config: 5m
      kubernetes: 20m
      nacos: 20m

    # Enables or disables passing of the server name through TLS Server Name Indication extension (SNI, RFC 6066)
    # when establishing a connection with the proxied HTTPS server.
    proxy_ssl_server_name: true
    upstream:
      keepalive: 320  # Sets the maximum number of idle keepalive connections to upstream servers that are preserved in the cache of each worker process.
                      # When this number is exceeded, the least recently used connections are closed.
      keepalive_requests: 1000  # Sets the maximum number of requests that can be served through one keepalive connection.
                                # After the maximum number of requests is made, the connection is closed.
      keepalive_timeout: 60s # Sets a timeout during which an idle keepalive connection to an upstream server will stay open.
    charset: utf-8  # Adds the specified charset to the "Content-Type" response header field, see
                    # http://nginx.org/en/docs/http/ngx_http_charset_module.html#charset
    variables_hash_max_size: 2048 # Sets the maximum size of the variables hash table.

    lua_shared_dict:
      internal-status: 10m
      plugin-limit-req: 10m
      plugin-limit-count: 10m
      plugin-limit-conn: 10m
      plugin-graphql-limit-count: 10m
      plugin-graphql-limit-count-reset-header: 10m
      plugin-ai-rate-limiting: 10m
      plugin-ai-rate-limiting-reset-header: 10m
      upstream-healthcheck: 10m
      worker-events: 10m
      lrucache-lock: 10m
      balancer-ewma: 10m
      balancer-ewma-locks: 10m
      balancer-ewma-last-touched-at: 10m
      plugin-limit-count-redis-cluster-slot-lock: 1m
      plugin-limit-count-advanced: 10m
      plugin-limit-count-advanced-redis-cluster-slot-lock: 1m
      tracing_buffer: 10m
      plugin-api-breaker: 10m
      etcd-cluster-health-check: 10m
      discovery: 1m
      jwks: 1m
      introspection: 10m
      access-tokens: 1m
      ext-plugin: 1m
      tars: 1m
      cas-auth: 10m
      saml_sessions: 10m
      status_report: 1m

graphql:
  max_size: 1048576 # the maximum size limitation of graphql in bytes, default 1MiB

#ext-plugin:
#cmd: ["ls", "-l"]

plugins: # plugin list (sorted by priority)
  #  - exit-transformer               # priority: 9999999
  - real-ip           # priority: 23000
  # - toolset                          # priority: 22901
  - ai # priority: 22900
  - client-control      # priority: 22000
  - proxy-buffering     # priority: 21991
  - proxy-control       # priority: 21990
  - request-id          # priority: 12015
  - zipkin              # priority: 12011
  - skywalking          # priority: 12010
  - opentelemetry       # priority: 12009
  - ext-plugin-pre-req  # priority: 12000
  - fault-injection     # priority: 11000
  - mocking             # priority: 10900
  - serverless-pre-function # priority: 10000
  - batch-requests      # priority: 4010
  - cors                # priority: 4000
  - ip-restriction      # priority: 3000
  - ua-restriction      # priority: 2999
  - referer-restriction # priority: 2990
  - csrf                # priority: 2980
  - uri-blocker         # priority: 2900
  - request-validation  # priority: 2800
  - portal-auth         # priority: 2750
  - chaitin-waf         # priority: 2700
  - multi-auth          # priority: 2600
  - openid-connect      # priority: 2599
  - saml-auth           # priority: 2598
  - cas-auth            # priority: 2597
  - authz-casbin        # priority: 2560
  - authz-casdoor       # priority: 2559
  - wolf-rbac           # priority: 2555
  - ldap-auth           # priority: 2540
  - hmac-auth           # priority: 2530
  - basic-auth          # priority: 2520
  - jwt-auth            # priority: 2510
  - key-auth            # priority: 2500
  - acl                 # priority: 2410
  - consumer-restriction  # priority: 2400
  - attach-consumer-label # priority: 2399
  - forward-auth        # priority: 2002
  - opa                 # priority: 2001
  - authz-keycloak      # priority: 2000
  - data-mask           # priority: 1500
  #- error-log-logger              # priority: 1091
  - proxy-cache         # priority: 1085
  - body-transformer    # priority: 1080
  - ai-prompt-template  # priority: 1071
  - ai-prompt-decorator # priority: 1070
  - ai-prompt-guard     # priority: 1072
  - ai-rag              # priority: 1060
  - ai-aws-content-moderation # priority: 1050
  - ai-proxy-multi      # priority: 1041
  - ai-proxy            # priority: 1040
  - ai-rate-limiting    # priority: 1030
  - ai-aliyun-content-moderation # priority: 1029
  - proxy-mirror        # priority: 1010
  - graphql-proxy-cache # priority: 1009
  - proxy-rewrite       # priority: 1008
  - workflow            # priority: 1006
  - api-breaker         # priority: 1005
  - graphql-limit-count # priority: 1004
  - limit-conn          # priority: 1003
  - limit-count         # priority: 1002
  - limit-count-advanced # priority: 1001
  - limit-req           # priority: 999
  #- node-status                   # priority: 998
  - traffic-label       # priority: 995
  - gzip                # priority: 994
  - api7-traffic-split  # priority: 966
  - traffic-split       # priority: 966
  - redirect            # priority: 900
  - response-rewrite    # priority: 899
  - oas-validator       # priority: 510
  - degraphql           # priority: 509
  - kafka-proxy         # priority: 508
  #- dubbo-proxy                   # priority: 507
  - grpc-transcode      # priority: 506
  - grpc-web            # priority: 505
  - soap                # priority: 504
  - public-api          # priority: 501
  - prometheus          # priority: 500
  - datadog             # priority: 495
  - error-page          # priority: 450
  - loki-logger         # priority: 414
  - elasticsearch-logger # priority: 413
  - echo                # priority: 412
  - loggly              # priority: 411
  - http-logger         # priority: 410
  - splunk-hec-logging  # priority: 409
  - skywalking-logger   # priority: 408
  - google-cloud-logging # priority: 407
  - sls-logger          # priority: 406
  - tcp-logger          # priority: 405
  - kafka-logger        # priority: 403
  - rocketmq-logger     # priority: 402
  - syslog              # priority: 401
  - udp-logger          # priority: 400
  - file-logger         # priority: 399
  - clickhouse-logger   # priority: 398
  - tencent-cloud-cls   # priority: 397
  - log-rotate          # priority: 100
  # <- recommend to use priority (0, 100) for your custom plugins
  #- example-plugin # priority: 0
  #- gm                 # priority: -43
  - aws-lambda          # priority: -1899
  - azure-functions     # priority: -1900
  - openwhisk           # priority: -1901
  - openfunction        # priority: -1902
  - serverless-post-function # priority: -2000
  - ext-plugin-post-req   # priority: -3000
  - ext-plugin-post-resp  # priority: -4000

plugin_attr:
  log-rotate:
    enable: false
    timeout: 10000 # maximum wait time for a log rotation(unit: millisecond)    interval: 3600    # rotate interval (unit: second)
    max_kept: 168 # max number of log files will be kept
    max_size: -1 # max size bytes of log files to be rotated, size check would be skipped with a value less than 0
    enable_compression: false # enable log file compression(gzip) or not, default false
  skywalking:
    service_name: APISIX
    service_instance_name: APISIX Instance Name
    endpoint_addr: http://127.0.0.1:12800
  soap:
    endpoint: http://127.0.0.1:5000
    timeout: 3000
  prometheus:
    export_uri: /apisix/prometheus/metrics
    metric_prefix: apisix_ # DOT NOT CHANGE, the monitoring dashboard depends on this prefix
    enable_export_server: true
    export_addr:
      ip: 0.0.0.0
      port: 9091
    fetch_metric_timeout: 5
    allow_degradation: false
    degradation_pause_steps: [60]
    metrics:
     http_status:
       # extra labels from nginx variables
       extra_labels:
         # the label name doesn't need to be the same as variable name
         # below labels are only examples, you could add any valid variables as you need
         - upstream_addr: $upstream_addr
         - upstream_status: $upstream_status
       expire: 0 # The expiration time after which metrics are removed. unit: second.
                 # 0 means the metrics will not expire
     http_latency:
       extra_labels:
         - upstream_addr: $upstream_addr
       expire: 0 # The expiration time after which metrics are removed. unit: second.
                 # 0 means the metrics will not expire
     bandwidth:
       extra_labels:
         - upstream_addr: $upstream_addr
       expire: 0 # The expiration time after which metrics are removed. unit: second.
                 # 0 means the metrics will not expire
    default_buckets:
      - 10
      - 50
      - 100
      - 200
      - 500
  
  zipkin: # Plugin: zipkin
    set_ngx_var: false # export zipkin variables to nginx variables

deployment:
  role: traditional
  role_traditional:
    config_provider: etcd
  etcd:
    host: # it's possible to define multiple etcd hosts addresses of the same etcd cluster.
      - "http://127.0.0.1:2379" # multiple etcd address, if your etcd cluster enables TLS, please use https scheme,
        # e.g. https://127.0.0.1:2379.
    prefix: /apisix     # configuration prefix in etcd
                        # DOT NOT CHANGE
    timeout: 30         # The timeout when connect/read/write to etcd.
    watch_timeout: 50   # The timeout when watch etcd
    #resync_delay: 5                # when sync failed and a rest is needed, resync after the configured seconds plus 50% random jitter
    #health_check_timeout: 10       # etcd retry the unhealthy nodes after the configured seconds
    startup_retry: 2 # the number of retry to etcd during the startup, default to 2
    #user: root                     # root username for etcd
    #password: 5tHkHhYkjr6cQY       # root password for etcd
    tls:
      # To enable etcd client certificate you need to build APISIX-Base, see
      # https://apisix.apache.org/docs/apisix/FAQ#how-do-i-build-the-apisix-base-environment
      #cert: /path/to/cert          # path of certificate used by the etcd client
      #key: /path/to/key            # path of key used by the etcd client

      verify: true  # whether to verify the etcd endpoint certificate when setup a TLS connection to etcd,
                    # the default value is true, e.g. the certificate will be verified strictly.
      #sni:                         # the SNI for etcd TLS requests. If missed, the host part of the URL will be used.

api7ee:
  telemetry:
    enable: true # enable telemetry data report to the control plane
    interval: 15 # interval in seconds to send telemetry data to the control plane
    max_metrics_size: 33554432 # max size in bytes(32M) of the metrics data sent to the control plane, if the size exceeds, the data will be truncated
  healthcheck_report_interval: 120 # healthcheck data report interval in seconds
  http_timeout: 30s # http timeout used while sending healthcheck and telemetry data to the control plane
  consumer_proxy:
    enable: false # if enable is true, the consumer resources will be proxied by the control plane.
    cache_success_count: 512 # cache the count of successful results queried from the control plane.
    cache_success_ttl: 60 # (unit:sec), cache the ttl of successful results queried from the control plane.
    cache_failure_count: 512 # cache the count of failed results queried from the control plane.
    cache_failure_ttl: 60 # (unit:sec), cache the ttl of failed results queried from the control plane.
  developer_proxy: # proxy portal-auth plugin
    cache_success_count: 256 # cache the count of successful results queried from the control plane.
    cache_success_ttl: 15 # (unit:sec), cache the ttl of successful results queried from the control plane.
    cache_failure_count: 256 # cache the count of failed results queried from the control plane.
    cache_failure_ttl: 15 # (unit:sec), cache the ttl of failed results queried from the control plane.
